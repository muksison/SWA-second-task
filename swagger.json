{
  "openapi": "3.0.1",
  "info": {
    "title": "WebScada",
    "description": "��� �������� �������� �� ������ ���������� �������������� �������������� (������ user->login)",
    "version": "v1"
  },
  "paths": {
    "/api/Account/login": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "�������� �����������",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Certificate/upload": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "summary": "�������� ����������������� �����������",
        "description": "-��� �������� ����������� ����������, ����� � ��������������� ������������ claim ManageCertificates = \"true\";<br />\r\n-���������� ������ ����� ���������� .pfx;<br />\r\n-����� �������� �������� ����������� - ������ ���������������, ���������� ������������������.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Config/{file}": {
      "delete": {
        "tags": [
          "Config"
        ],
        "summary": "�������� �����-������",
        "description": "",
        "parameters": [
          {
            "name": "file",
            "in": "path",
            "description": "15-35-44.zip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Config": {
      "delete": {
        "tags": [
          "Config"
        ],
        "summary": "�������� ���� ������-�������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Config/get": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "�������� �����-������",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "15-35-41.zip",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Config/upload": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "�������� �����-������",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Config/list": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "��������� ������ ��� ������������ ����� ������",
        "description": "����� ������� � �������� ������� ��������� �� ���������� ����:<br /><b>C:\\ProgramData\\SmartPTT SCADA\\GUI\\backup</b>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Config/backup": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "�������� ������",
        "description": "�� ��������� ���������� �������� ���� �������� �� websocket ���������� ���������:<br /><b>\r\n{<br />\r\n    \"Format\": \"CONFIG BACKUPED\"<br />\r\n}\r\n</b>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Config/restore": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "�������������� �������� �� �����-������",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "15-35-41.zip",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "��������� ������ dashboard",
        "description": "���� parentId ����� null, �������������, ��� �������� �������.<br />\r\n� ���� items  �������� ���������� ������ ��������. <br />\r\n� ���� items �������� ���������� ������ ��������������� �������� � ����������.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "���������� ������ dashboard",
        "description": "���� status == ValidationError, �� � ���� messages ����� ������ ��������� �� ������� ��������� � � ���� data �������� �������� ������, �����, ����������� ������.\r\n\r\nSample request:\r\n            \r\n    POST api/dashboard\r\n    {\r\n       \"id\": \"DashId_2\",\r\n       \"parentId\": \"DashId_1\",\r\n       \"name\": \"Dashboard 2\",\r\n       \"items\": [      {\r\n       \"id\": \"CardId_2\",\r\n       \"name\": \"Card 2\",\r\n       \"width\": 3,\r\n       \"height\": 3,\r\n       \"items\":          [\r\n       {\r\n       \"widgetId\": 3,\r\n       \"paramId\": \"ParamId_1\"\r\n       },\r\n                               {\r\n       \"widgetId\": 3,\r\n       \"paramId\": \"ParamId_2\"\r\n    }\r\n    ]\r\n    }]\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dashboard"
        ],
        "summary": "���������� ������������� dashboard",
        "description": "���� status == ValidationError, �� � ���� messages ����� ������ ��������� �� ������� ��������� � � ���� data �������� �������� ������.\r\n\r\nSample request:\r\n            \r\n    POST api/dashboard\r\n    {\r\n       \"id\": \"DashId_2\",\r\n       \"parentId\": \"DashId_1\",\r\n       \"name\": \"Dashboard 2\",\r\n       \"items\": [      {\r\n       \"id\": \"CardId_2\",\r\n       \"name\": \"Card 2\",\r\n       \"width\": 3,\r\n       \"height\": 3,\r\n       \"items\":          [\r\n       {\r\n       \"widgetId\": 3,\r\n       \"paramId\": \"ParamId_1\"\r\n       },\r\n                               {\r\n       \"widgetId\": 3,\r\n       \"paramId\": \"ParamId_2\"\r\n    }\r\n    ]\r\n    }]\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/{id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "��������� dashboard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "DashId_1",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dashboard"
        ],
        "summary": "�������� dashboard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "DashId_2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/import": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "�������������� �������� �� ������ ������� �������",
        "parameters": [
          {
            "name": "objectIdFrom",
            "in": "query",
            "description": "Ey4WkHar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectIdTo",
            "in": "query",
            "description": "yhfvfnMF",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/trim": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Scan all users folders and leave in design.xml only dashboards with needed user",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Database": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "��������� ������ �������� ��",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Database/connect": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "����������� � ���� ������",
        "description": "���:<br />\r\nType - ��� ������� ���� ������:<br />\r\n1 - MS SQL Server;<br />\r\n2 - PostgreSQL;<br />\r\nPort:<br />\r\n5432 - ��� ����������� � PostgreSQL (�����������);<br />\r\n��� SQLServer ��������� �� �����;",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Database/save": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "���������� ����������� � ���� ������",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Database/create": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "�������� ���� ������",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "�������� ������������� ������� �� ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "��������� ������ �������",
        "description": "data � ������ ������� <br />\r\nstatus � ������ ���������� ��������: 1 � Ok, 2 � DbError,\r\n3 � ValidationError, 4 � NotFound, 5 - Error messages � ������ \r\n��������� �� �������.<br />\r\n���� ��� ������� ��������� � �������� ���� �� �������, �� ������������ ��� ������.",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "2018-06-06T11:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "2018-45-06T13:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deviceCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceText",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paramCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paramText",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageText",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeCondition",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/csv": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "�������� ������� � csv ����",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "2018-06-06T11:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "2018-45-06T13:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deviceCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceText",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paramCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paramText",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageCondition",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageText",
            "in": "query",
            "description": "all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeCondition",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventComment/list": {
      "get": {
        "tags": [
          "EventComment"
        ],
        "summary": "��������� ������ ������������",
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "eventId � eventId ������� (id � ������� Events)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventComment": {
      "post": {
        "tags": [
          "EventComment"
        ],
        "summary": "���������� �����������",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddComment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventComment/{id}": {
      "delete": {
        "tags": [
          "EventComment"
        ],
        "summary": "�������� �����������",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id � Id �����������",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/{file}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "��������� �����������",
        "parameters": [
          {
            "name": "file",
            "in": "path",
            "description": "image id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "�������� ����������� �� ������",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/IoServer": {
      "get": {
        "tags": [
          "IoServer"
        ],
        "summary": "��������� �������� �����������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IoServer"
        ],
        "summary": "���������� �������� �����������",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IoServerSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IoServerSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IoServerSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IoServerSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Item": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "��������� ������ ��������",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "��������� ����/�����",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "�������� ����/�����",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "itemType",
            "in": "query",
            "description": "��� ����������. ���������� ��������: float � ��������� float, disc � ���������� ���������;",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optimize",
            "in": "query",
            "description": "������������� ��� �������� floats. 1 � �������������� �������\r\n            ������ (������ �� �������������� ���������� ��������� �������� ������� Floats/FloatsHours � �.�.).\r\n            0 � �� ��������������, �������������� ���������� ������ �� ����� ������ ������� ItemsFloat.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "������ itemGuid ���������, ����������� �������",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Item/csv": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "�������� �������� ������� � csv ����",
        "description": "� ������� �������� items � ��������� ����� �������, ������ ��������:\r\nguid|type|������ �������� �������|, type � B ��� F (��� ��� ������������ ����������).",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "��������� ����/�����",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "�������� ����/�����",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "������ itemGuid ���������, ����������� �������",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/list": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "��������� ������ �����",
        "description": "Type:<br />\r\n  0 � ����� All;<br />\r\n  1 � ����� Custom;<br />",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "�������� ����",
        "description": "Type:<br />\r\n    0 � ����� All;<br />\r\n    1 � ����� Custom",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "�������������� ����",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "�������� ����",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/copy": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "����������� ����",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCopy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCopy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCopy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCopy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Session/check": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "��������� ��������� ������",
        "responses": {
          "200": {
            "description": "������������ �����������",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "401": {
            "description": "������������ �������������"
          }
        }
      }
    },
    "/api/Session/culture": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "��������� �����",
        "description": "������� � ��������� ���� ��������, ����� ��� ��� ������������ �, ��������������,\r\n            ���������� �� ��������. ������ ������ ������� ���� ����������, ����� �������� ���������.",
        "requestBody": {
          "description": "{\r\n\"culture\": \"ru-RU\"\r\n}",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCulture"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCulture"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCulture"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCulture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "�������� �����",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Snapshot/{id}": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "��������� ������ ��� �������/������� ������� �� ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshot"
        ],
        "summary": "�������� ������ ��� �������/������� ������� �� ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Snapshot": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "��������� ������ ������� ��� �������/������� �������",
        "description": "Type � ��� ������� (� ������� chart).",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Snapshot"
        ],
        "summary": "���������� ������ ��� �������/������� �������",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Snapshot"
        ],
        "summary": "�������������� ������ ��� �������/������� �������",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sound/{file}": {
      "get": {
        "tags": [
          "Sound"
        ],
        "summary": "��������� �����",
        "parameters": [
          {
            "name": "file",
            "in": "path",
            "description": "filename",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Sound"
        ],
        "summary": "�������� �����",
        "parameters": [
          {
            "name": "file",
            "in": "path",
            "description": "fileSound",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Sound/list": {
      "get": {
        "tags": [
          "Sound"
        ],
        "summary": "��������� ������ ������",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Sound": {
      "post": {
        "tags": [
          "Sound"
        ],
        "summary": "�������� ������ �����",
        "description": "���� � ����������� .mp4",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SystemInfo": {
      "get": {
        "tags": [
          "SystemInfo"
        ],
        "summary": "��������� ����� ��������",
        "description": "Mode � ����� ���������������� ����������:<br />\r\n\"integrated\" � � ������� SmartPTT<br />\r\n\"standalone\" � ��������������(����� �������)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Test/session_start": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "������ ������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Test/session_get": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "��������� ������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Test/session_decrypt": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "��������� ������������� ������",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/token": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "��������� ������ �������� ������������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "��������� �������� ������������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "��������� ������ �������������",
        "description": "Origin � ������������� ������������: <br />\r\n�local� - ������������, ��������� � standalone ������ ������ WebScada; <br />\r\nImmortal � ��������� ���������� ������������ � ����� admin, ��� ������ �������.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "�������������� ������������",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEdit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/add": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "���������� ������������",
        "description": "������� �������� ��������, ���� �settings� �������� ������,\r\n� ������� json ������, � �� ������ json.<br />\r\nType: Admin, Dispatcher, Viewer",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdd"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdd"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdd"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "�������� ������������",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/copy": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "����������� �������� ������������",
        "parameters": [
          {
            "name": "userIdFrom",
            "in": "query",
            "description": "ID ��������� ������������",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdTo",
            "in": "query",
            "description": "ID ��������� ������������",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "�����",
        "description": "������ ������������� �������� ��������������� �� �������� ����� ������� ������: /api/user/login.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "����",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/editpassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "����� ������",
        "description": "BODY (���� ������� json):<br />\r\nId (GUID ������������)<br />\r\nPasswordOld (������� ������)<br />\r\nPasswordNew (����� ������)<br />\r\nPasswordNew2 (������������� ������)<br />",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/claims": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "������� claims �������� ������������",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/settingsform": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/settings": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "��������� �������� ������������",
        "description": "������� �������� ��������, ���� �settings� �������� ������, � ������� json ������, � �� ������ json.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingJson"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingJson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "��������� �������� ������������",
        "description": "������� �������� ��������, ���� �data� �������� ������, � ������� json ������, � �� ������ json.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/templates": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "��������� ������ ��������� ����� �������������",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/context": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "������ ���������",
        "description": "�������� ������������ ������������ ��� �������� �������� �������, ����� ���: <br />\r\n-������� ������� �������;<br />\r\n-������� �������;<br />\r\n-������� ���������;<br />\r\n-� �.�.<br />\r\n������:<br /><b>\r\n{<br />\r\n    \"Context\": \"{\\\"filter\\\":\\\"en-us\\\",\\\"filter2\\\":true,\\\"filter3\\\":\\\"default\\\"}\"<br />\r\n}</b>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserContext"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContext"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContext"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "������ ���������",
        "description": "�������� ������������ ������������ ��� �������� �������� �������, ����� ���: <br />\r\n-������� ������� �������;<br />\r\n-������� �������;<br />\r\n-������� ���������;<br />\r\n-� �.�.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    },
    "/api/Widget/{id}": {
      "get": {
        "tags": [
          "Widget"
        ],
        "summary": "��������� ����������� �������",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddComment": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "comment": {
            "type": "string",
            "default": "New comment 4",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CardType"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget"
            },
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Claims": {
        "type": "object",
        "properties": {
          "configureDevices": {
            "type": "boolean"
          },
          "manageRoles": {
            "type": "boolean"
          },
          "manageUsers": {
            "type": "boolean"
          },
          "manageTaskSchedules": {
            "type": "boolean"
          },
          "manageLicense": {
            "type": "boolean"
          },
          "manageDatabase": {
            "type": "boolean"
          },
          "manageBackups": {
            "type": "boolean"
          },
          "manageSharedSnapshots": {
            "type": "boolean"
          },
          "manageEventComments": {
            "type": "boolean"
          },
          "manageDashboards": {
            "type": "boolean"
          },
          "manageCertificates": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DashboardType"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "DashboardType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DatabaseSettings": {
        "required": [
          "databaseName",
          "serverName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DatabaseType"
          },
          "serverName": {
            "type": "string"
          },
          "databaseName": {
            "type": "string"
          },
          "integratedSecurity": {
            "type": "boolean"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DatabaseType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "_Name": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IoServerSettings": {
        "type": "object",
        "properties": {
          "port": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "portSecure": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "reconnectInterval": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "_Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "control": {
            "type": "boolean"
          },
          "alarms": {
            "type": "boolean"
          },
          "acknowledge": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Lists": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListType"
          },
          "all": {
            "$ref": "#/components/schemas/ListsAll"
          },
          "custom": {
            "$ref": "#/components/schemas/ListsCustom"
          }
        },
        "additionalProperties": false
      },
      "ListsAll": {
        "type": "object",
        "properties": {
          "control": {
            "type": "boolean"
          },
          "alarms": {
            "type": "boolean"
          },
          "acknowledge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListsCustom": {
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "OperationStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ResponseData": {
        "type": "object",
        "properties": {
          "data": {
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/OperationStatus"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "$ref": "#/components/schemas/Claims"
          },
          "lists": {
            "$ref": "#/components/schemas/Lists"
          }
        },
        "additionalProperties": false
      },
      "RoleCopy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Snapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "immortal": {
            "type": "boolean"
          },
          "security": {
            "$ref": "#/components/schemas/UserSecurity"
          },
          "settings": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "additionalProperties": false
      },
      "UserAdd": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "password2": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserContext": {
        "type": "object",
        "additionalProperties": false
      },
      "UserCulture": {
        "type": "object",
        "additionalProperties": false
      },
      "UserEdit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLoginForm": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSecurity": {
        "type": "object",
        "additionalProperties": false
      },
      "UserSettingJson": {
        "type": "object",
        "additionalProperties": false
      },
      "UserUpdatePasswordForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "passwordNew": {
            "type": "string",
            "nullable": true
          },
          "passwordNew2": {
            "type": "string",
            "nullable": true
          },
          "passwordOld": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Widget": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "integer",
            "format": "int32"
          },
          "paramId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
